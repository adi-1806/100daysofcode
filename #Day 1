# Count Good Nodes in Binary Tree
# Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.
# Return the number of good nodes in the binary tree.


class Solution(object):
    def goodNodes(self, root):
        if not root.left and not root.right:
            return 1
        stack = deque([root])
        my_dict = {root.val: 'True'}
        same = 0
        while stack:
            poped = stack.pop()
            
            if poped:
                if poped.left:
                    if poped.left.val >= poped.val:
                        if poped.left.val in my_dict:
                            same +=1
                        new_data = {poped.left.val: True}
                        my_dict.update(new_data)
                    
                    stack.append(poped.left)
                if poped.right:
                    if poped.right.val >= poped.val:
                        if poped.right.val in my_dict:
                            same +=1
                        new_data = {poped.right.val: True}
                        my_dict.update(new_data)
                    
                    stack.append(poped.right)
    
        return len(my_dict) + same
