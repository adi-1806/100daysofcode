1
621. Task Scheduler

You are given an array of CPU tasks, each represented by letters A to Z, and a cooling time, n. Each cycle or interval allows the completion of one task. Tasks can be completed in any order, but there's a constraint: identical tasks must be separated by at least n intervals due to cooling time.

â€‹Return the minimum number of intervals required to complete all tasks.

class Solution:
    def leastInterval(self, tasks: List[str], n: int) -> int:
        ans=[0]*26
        for task in tasks:
            ans[ord(task)-ord('A')]+=1
        ans.sort()
        chunk=ans[25]-1
        idle=chunk*n
        for i in range(24,-1,-1):
            idle-=min(chunk,ans[i])
        if idle>=0:
            return len(tasks)+idle
        else:
            return len(tasks)        
